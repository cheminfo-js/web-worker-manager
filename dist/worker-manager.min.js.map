{"version":3,"sources":["worker-manager.min.js"],"names":["e","exports","module","define","amd","f","window","global","self","WorkerManager","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"noop","func","options","TypeError","undefined","this","_workerCode","toString","_numWorkers","maxWorkers","Math","min","CORES","_workers","Array","_timeout","timeout","_terminateOnError","terminateOnError","deps","isArray","_id","_terminated","_working","_waiting","_callbacks","_init","workerTemplate","navigator","hardwareConcurrency","prototype","workerURL","newWorkerURL","worker","Worker","postMessage","action","onmessage","_onmessage","bind","onerror","_onerror","running","URL","revokeObjectURL","error","terminate","_exec","event","data","id","execInfo","shift","args","time","Date","now","postAll","post","callback","push","./workerTemplate",2,"ManagedWorker","_listeners","on","RangeError","_send","_trigger","apply","importScripts","unshift","send","workerStr","split","blob","Blob","type","createObjectURL"],"mappings":"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","file":"worker-manager.min.js","sourcesContent":["/**\n * worker-manager - Worker manager\n * @version v0.0.2\n * @link https://github.com/cheminfo-js/worker-manager\n * @license MIT\n */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.WorkerManager=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar workerTemplate = require('./workerTemplate');\n\nvar CORES = navigator.hardwareConcurrency || 1;\n\nfunction noop() {\n}\n\nfunction WorkerManager(func, options) {\n\n    // Check arguments\n    if (typeof func !== 'function')\n        throw new TypeError('func argument must be a function');\n    if (options === undefined)\n        options = {};\n    if (typeof options !== 'object' || options === null)\n        throw new TypeError('options argument must be an object');\n\n    this._workerCode = func.toString();\n\n    // Parse options\n    this._numWorkers = (options.maxWorkers > 0) ? Math.min(options.maxWorkers, CORES) : CORES;\n    this._workers = new Array(this._numWorkers);\n    this._timeout = options.timeout || 0;\n    this._terminateOnError = !!options.terminateOnError;\n\n    var deps = options.deps;\n    if (typeof deps === 'string')\n        deps = [deps];\n    if (!Array.isArray(deps))\n        deps = undefined;\n\n    this._id = 0;\n    this._terminated = false;\n    this._working = 0;\n    this._waiting = [];\n    this._callbacks = {};\n\n    this._init(deps);\n\n}\n\nWorkerManager.prototype._init = function (deps) {\n\n    var workerURL = workerTemplate.newWorkerURL(this._workerCode);\n\n    for (var i = 0; i < this._numWorkers; i++) {\n        var worker = new Worker(workerURL);\n        worker.postMessage({\n            action: 'init',\n            deps: deps\n        });\n        worker.onmessage = this._onmessage.bind(this, worker);\n        worker.onerror = this._onerror.bind(this, worker);\n        worker.running = false;\n        this._workers[i] = worker;\n    }\n\n    URL.revokeObjectURL(workerURL);\n\n};\n\nWorkerManager.prototype._onerror = function (worker, error) {\n\n    if (this._terminated)\n        return;\n    this._working--;\n    //TODO find a way to detect which run has failed or cancel and notify all current runs for this worker\n    //worker.currentCallback(error);\n    worker.running = false;\n    if (this._terminateOnError) {\n        this.terminate();\n    } else {\n        this._exec();\n    }\n};\n\nWorkerManager.prototype._onmessage = function (worker, event) {\n    if (this._terminated)\n        return;\n    this._working--;\n    if (this._callbacks[event.data.id]) {\n        this._callbacks[event.data.id](null, event.data.data);\n        delete this._callbacks[event.data.id];\n        worker.running = false;\n    }\n    this._exec();\n};\n\nWorkerManager.prototype._exec = function () {\n    if (this._working === this._numWorkers || this._waiting.length === 0)\n        return;\n    for (var i = 0; i < this._numWorkers; i++) {\n        if (!this._workers[i].running) {\n            var id = this._id++;\n            var execInfo = this._waiting.shift();\n            var worker = this._workers[i];\n            worker.postMessage({\n                action: 'exec',\n                id: id,\n                event: execInfo[0],\n                args: execInfo[1]\n            });\n            worker.running = true;\n            worker.time = Date.now();\n            this._callbacks[id] = execInfo[2] || noop;\n            this._working++;\n            break;\n        }\n    }\n};\n\nWorkerManager.prototype.terminate = function () {\n    if (this._terminated)\n        return;\n    for (var i = 0; i < this._numWorkers; i++) {\n        this._workers[i].terminate();\n    }\n    this._terminated = true;\n};\n\nWorkerManager.prototype.postAll = function (event, args) {\n    if (this._terminated)\n        throw new Error('Cannot post (terminated)');\n    args = args || [];\n    if (!Array.isArray(args))\n        args = [args];\n    for (var i = 0; i < this._numWorkers; i++) {\n        this._workers[i].postMessage({\n            action: 'exec',\n            event: event,\n            args: args\n        });\n    }\n};\n\nWorkerManager.prototype.post = function (event, args, callback) {\n    if (this._terminated)\n        throw new Error('Cannot post (terminated)');\n    if (typeof args === 'function') {\n        callback = args;\n        args = [];\n    } else if (!Array.isArray(args)) {\n        args = [args];\n    }\n    this._waiting.push([event, args, callback]);\n    this._exec();\n};\n\nmodule.exports = WorkerManager;\n\n},{\"./workerTemplate\":2}],2:[function(require,module,exports){\n'use strict';\n\nvar worker = function () {\n    self.window = self;\n    function ManagedWorker() {\n        this._listeners = {};\n    }\n    ManagedWorker.prototype.on = function (event, callback) {\n        if (this._listeners[event])\n            throw new RangeError('there is already a listener for ' + event);\n        if (typeof callback !== 'function')\n            throw new TypeError('callback argument must be a function');\n        this._listeners[event] = callback;\n    };\n    ManagedWorker.prototype._send = function (id, data) {\n        self.postMessage({\n            id: id,\n            data: data\n        });\n    };\n    ManagedWorker.prototype._trigger = function (event, args) {\n        if (!this._listeners[event])\n            throw new Error('event ' + event + ' is not defined');\n        this._listeners[event].apply(null, args);\n    };\n    var worker = new ManagedWorker();\n    self.onmessage = function (event) {\n        switch(event.data.action) {\n            case 'init':\n                if (event.data.deps) {\n                    importScripts.apply(self, event.data.deps);\n                }\n                break;\n            case 'exec':\n                event.data.args.unshift(function (data) {\n                    worker._send(event.data.id, data);\n                });\n                worker._trigger(event.data.event, event.data.args);\n                break;\n            case 'ping':\n                worker.send(event.data.id, 'pong');\n                break;\n        }\n    };\n    ((\"CODE\"))\n};\n\nvar workerStr = worker.toString().split('((\"CODE\"))');\n\nexports.newWorkerURL = function newWorkerURL(code) {\n    var blob = new Blob(['(', workerStr[0], '(', code, ')();', workerStr[1], ')();'], {type: 'application/javascript'});\n    return URL.createObjectURL(blob);\n};\n\n},{}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}